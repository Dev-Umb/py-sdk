# ================================
# Python SDK 环境变量配置示例
# ================================
# 复制此文件为 .env 并根据实际情况修改配置值
# 配置优先级：参数 > 环境变量 > 默认值

# ================================
# Nacos 配置
# ================================
# Nacos 服务器地址（必需）
# 支持单个地址或多个地址（逗号分隔）
NACOS_SERVER_ADDRESSES=127.0.0.1:8848
# NACOS_SERVER_ADDRESSES=nacos1.example.com:8848,nacos2.example.com:8848

# Nacos 命名空间（可选）
# 用于环境隔离，如：dev, test, prod
NACOS_NAMESPACE=dev

# Nacos 认证信息（可选）
# 如果 Nacos 启用了认证，需要配置用户名和密码
NACOS_USERNAME=nacos
NACOS_PASSWORD=nacos

# ================================
# 日志配置
# ================================
# 全局日志级别
# 可选值：DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# 日志格式
# 可选值：json, text
LOG_FORMAT=json

# ================================
# 火山引擎 TLS 配置
# ================================
# TLS 服务端点
TLS_ENDPOINT=https://tls-cn-beijing.volces.com

# TLS Topic ID（每个服务需要不同的 Topic ID）
TLS_TOPIC_ID=your-topic-id-here

# 火山引擎访问凭证
TLS_ACCESS_KEY_ID=your-access-key-id
TLS_ACCESS_KEY_SECRET=your-access-key-secret

# 服务区域（可选）
TLS_REGION=cn-beijing

# ================================
# HTTP 客户端配置
# ================================
# 请求超时时间（秒）
HTTP_TIMEOUT=30

# 重试次数
HTTP_RETRIES=3

# 基础 URL（可选）
# HTTP_BASE_URL=https://api.example.com

# 默认请求头（可选）
# HTTP_USER_AGENT=py-sdk/1.0.0

# ================================
# 应用配置
# ================================
# 应用名称
APP_NAME=my-service

# 应用版本
APP_VERSION=1.0.0

# 运行环境
# 可选值：development, testing, staging, production
APP_ENV=development

# 应用端口
APP_PORT=8080

# ================================
# 数据库配置示例
# ================================
# 数据库连接字符串
# DB_URL=postgresql://user:password@localhost:5432/dbname

# Redis 连接
# REDIS_URL=redis://localhost:6379/0

# ================================
# 其他配置
# ================================
# 是否启用调试模式
DEBUG=true

# 是否启用 SDK 自动初始化
PY_SDK_AUTO_INIT=true

# 健康检查端点
HEALTH_CHECK_PATH=/health

# 服务发现间隔（秒）
SERVICE_DISCOVERY_INTERVAL=30

# ================================
# 容器化部署配置
# ================================
# 容器内服务IP（通常自动获取）
# SERVICE_IP=192.168.1.100

# 容器端口映射
# CONTAINER_PORT=8080

# 集群名称
CLUSTER_NAME=DEFAULT

# 服务分组
SERVICE_GROUP=DEFAULT_GROUP

# ================================
# 监控和可观测性
# ================================
# 是否启用 Prometheus 指标
# ENABLE_METRICS=true

# 指标端口
# METRICS_PORT=9090

# 是否启用链路追踪
ENABLE_TRACING=true

# 链路追踪采样率（0.0-1.0）
TRACING_SAMPLE_RATE=0.1

# ================================
# 安全配置
# ================================
# JWT 密钥（生产环境请使用复杂密钥）
# JWT_SECRET=your-jwt-secret-key

# API 密钥
# API_KEY=your-api-key

# 加密盐值
# ENCRYPTION_SALT=your-encryption-salt

# ================================
# 第三方服务配置
# ================================
# 消息队列配置
# MQ_URL=amqp://user:password@localhost:5672/

# 缓存配置
# CACHE_TTL=3600

# 邮件服务配置
# SMTP_HOST=smtp.example.com
# SMTP_PORT=587
# SMTP_USER=your-email@example.com
# SMTP_PASSWORD=your-email-password

# ================================
# 开发和测试配置
# ================================
# 是否启用热重载
# HOT_RELOAD=true

# 测试数据库
# TEST_DB_URL=sqlite:///test.db

# 模拟服务端点
# MOCK_API_URL=http://localhost:3000

# ================================
# 注意事项
# ================================
# 1. 生产环境请删除或注释掉不需要的配置项
# 2. 敏感信息（如密码、密钥）请妥善保管，不要提交到代码仓库
# 3. 不同环境使用不同的配置文件（如 .env.dev, .env.prod）
# 4. 容器部署时可以通过环境变量或配置文件挂载的方式注入配置
# 5. 部分配置支持从 Nacos 配置中心动态获取，具体请参考文档 